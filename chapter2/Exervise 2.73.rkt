(define (install-make-sum-package)
  (define (addend x)
      (car x))
  (define (augend x)
      (cdr x))
  (define (make-sum a b)
    (cond ((=number? a 0) b)
          ((=number? b 0) a)
          ((and (number? a) (number? b)) (+ a b))
          (else (list 'x a b))
    )
  )
  (put 'addend 'make-sum addend)
  (put 'augend 'make-sum augend)
  (put 'make-sum 'make-sum make-sum)
  (put 'deriv '+
      (lambda (exp var)
          (make-sum (deriv (addend exp) var)
                    (deriv (augend exp) var))))

)